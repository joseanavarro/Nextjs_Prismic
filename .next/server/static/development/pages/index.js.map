{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./api/index.js","webpack:///./config.js","webpack:///./helpers/index.js","webpack:///./layouts/index.js","webpack:///./pages/index.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"next/link\"","webpack:///external \"prismic-javascript\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import Prismic from 'prismic-javascript';\nimport { PRISMIC_API_URL } from '../config';\n\nconst getBlogPostsAPI = async params => {\n  try {\n    // We initialise the API with Prismic's kit\n    const API = await Prismic.api(PRISMIC_API_URL);\n    // Here we just query the documents with a filter of only returning\n    // the type of blog_post and order them. Full docs can be found here:\n    // https://github.com/prismicio/prismic-javascript#query-the-content\n    const response = await API.query(\n      Prismic.Predicates.at('document.type', 'blog_post'),\n      {\n        orderings: '[my.blog_post.date desc]',\n        ...params\n        // params will be extra parameters we can pass through with api calls\n        // such as how many documents to return\n      }\n    );\n    console.log('Response from Prismic: ' + JSON.stringify(response))\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst getBlogPostAPI = async slug => {\n  try {\n    const API = await Prismic.api(PRISMIC_API_URL);\n    // we pass up the slug to request the correct post\n    const response = await API.query(\n      Prismic.Predicates.at('my.blog_post.uid', slug)\n    );\n    console.log('Response from Prismic: ' + JSON.stringify(response))\n    return response.results[0];\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n\n// Don't forget to export newly created function\nexport { getBlogPostsAPI, getBlogPostAPI };","export const PRISMIC_API_URL = 'https://test-blog-nextjs.prismic.io/api/v2';\n","function linkResolver(doc) {\n  if (doc.type === 'blog_post') {\n    return `/blog/${doc.uid}`;\n  }\n  return '/';\n}\n\nmodule.exports = {\n  linkResolver\n};\n","const DefaultLayout = ({ children }) => (\n  <div>\n    <header>\n      <h1>Next.js & Prismic.io Blog</h1>\n    </header>\n    <main>{children}</main>\n  </div>\n);\n\nexport default DefaultLayout;","import Link from 'next/link';\nimport { getBlogPostsAPI } from '../api';\n// We create this in just a tick\nimport { linkResolver } from '../helpers';\n/**\n* As you can see we are importing our layout here,\n* and below we wrap all of the page in it.\n*/\nimport DefaultLayout from '../layouts';\n\nconst Index = ({ posts = [] }) => (\n  <DefaultLayout>\n    <h2>Recent Blog Posts</h2>\n    <ul>\n      {posts.map((post, index) => (\n        <li key={index}>\n          <Link\n            as={linkResolver(post)}\n            href={`/blogPost?slug=${post.uid}`}\n            passHref\n          >\n            <a>{post.data.title[0].text}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </DefaultLayout>\n);\n\nIndex.getInitialProps = async () => {\n  // Here we call the API and request 5 documents\n  const response = await getBlogPostsAPI({ pageSize: 5 });\n  return {\n    posts: response.results\n  };\n};\n\nexport default Index;","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"next/link\");","module.exports = require(\"prismic-javascript\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AAUA;AAHA;AACA;AARA;AAOA;AASA;AAhBA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAIA;AAGA;AAPA;AACA;AADA;AAAA;AAAA;AAUA;AAVA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAFA;AAJA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAHA;AAEA;AAFA;AAIA;AADA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;ACrCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}